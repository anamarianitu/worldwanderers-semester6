stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - build-docker-images
  # - sonarqube-check
  # - deploy

# This job runs in the build stage, which runs first.
build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - cd backend
    - cd worldwanderers 
    - ./gradlew build 

# This job runs in the test stage.
backend-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - cd backend
    - cd worldwanderers 
    - ./gradlew test
    - echo "Successfully passed tests"

# This job builds and pushes the images to dockerhub
build-image-job:
  stage: build-docker-images
  script:
    - cd backend/worldwanderers/post-service
    - ./gradlew build
    - docker build -t worldwanderers/post-service:v1.1 .
    - docker push worldwanderers/post-service:v1.1

    - cd ../group-service
    - ./gradlew build
    - docker build -t worldwanderers/group-service:v1.1 .
    - docker push worldwanderers/group-service:v1.1

    - cd ../user-service
    - ./gradlew build
    - docker build -t worldwanderers/user-service:v1.1 .
    - docker push worldwanderers/user-service:v1.1

    - cd ../security-service
    - ./gradlew build
    - docker build -t worldwanderers/security-service:v1.1 .
    - docker push worldwanderers/security-service:v1.1

    - cd ../api-gateway
    - ./gradlew build
    - docker build -t worldwanderers/api-gateway:v1.1 .
    - docker push worldwanderers/api-gateway:v1.1

    - cd ../discovery-service
    - ./gradlew build
    - docker build -t worldwanderers/discovery-service:v1.1 .
    - docker push worldwanderers/discovery-service:v1.1

    - echo "Build and push Docker images complete."


# sonarqube-job:
#   image: gradle:8.0.1-jdk17
#   stage: sonarqube-check
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - cd backend/worldwanderers 
#     - gradle sonar
#     - gradle --stop
#   allow_failure: true
#   only:
#     - main


# deploy-job:
#   stage: deploy 
#   image: docker/compose:1.29.2  
#   script:
#     - cd backend
#     - cd worldwanderers 
#     - echo "Deploying the application..."
#     - docker-compose up -d
#   environment:
#     name: production
#   only:
#     - main
